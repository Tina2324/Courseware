1.删除非空文件夹: 
      fs.rmdir()--->只能删除空文件夹  
   1) 方法一: 先删除文件夹中的内容,然后再删除该文件夹
   2) 方法二: 使用别人提供的方法(后面讲)
2.模块: 在nodejs中,以模块为单位划分所有的功能,并提供了一个完整的模块加载机制
        此时可以将一个完整的应用项目分割成各个不同的部分
        不建议在一个js中写所有的代码,要使用MVC分层思想
   MVS: V(view表示视图,通常通过html页面展示)
        C(controller,表示控制器,处理服务器端的相关逻辑,起一个连接视图与模型的作用)
        M(model,表示模型层,数据层,一般是后台数据库)
3.在一个js中使用另一个js: 
   1) 关键字: require('其他js的路径')
   2) 调用另一个js中的属性或方法: exports(会将指定的方法或属性暴露出去).属性名/方法名 = 属性名/方法名;
4.暴露一个对象: module.exports = 类名;
5.暴露一个文件夹: 
   1) 通常情况下,一个功能模块会包含很多的js文件
   2) 为了方便使用,会将多个js文件放入文件夹中,作为一个完整的模块来使用,在引用时,可以直接引入该文件夹的名称
   3) 引用某个文件夹时,该文件夹下必须包含一个index.js文件,如果没有,则报错
   4) 如果不想使用index.js作为对外接口文件,可以添加配置文件(package.json,使用npm init 命令自动生成),来自己指定对外接口文件
      将其中main属性的值,修改为自定义对外接口的文件路径
   ***狭义上,一个js就是一个模块;广义上,多个js相互引用,最终实现一个大的功能,这是广义上的模块
   ***在引用自定义模块时(包括引用js文件,文件夹),表示当前路径的 ./不能省略
      如果省略,则程序会自动从一个特殊名称的文件夹(node_modules)中去查找对应的模块
      加 ./ 就是从当前路径去寻找; 不加就是从node_modules中去寻找
   注: node_modules文件夹不一定要在当前目录下,但是一低昂要在直接父级下
6.使用别人的模板: www.npmjs.com 

练习: 新建route.js,server.js 
      server.js中创建服务,判断请求地址,根据不同的请求地址,显示不同的内容
      route.js中暴露三个字符串: 这是首页,这是信息页,这是错误页
      server.js中处理请求: / 显示---这是首页; info---显示这是信息页; 其他地址---显示这是错误页
练习02: 获取当前时间,并格式化输出; 2019年3月8号 16时00分00秒
        下载安装模块(silly-datetime); 命令行代码 ---> npm install silly-datetime